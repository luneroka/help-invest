services:
  postgres:
    image: postgres:15
    restart: always
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  flask:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - .:/workspace
    ports:
      - "5001:5000"
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    command: python -m flask --app backend.app.main run --host=0.0.0.0 --port=5000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host 0.0.0.0


volumes:
  pgdata: